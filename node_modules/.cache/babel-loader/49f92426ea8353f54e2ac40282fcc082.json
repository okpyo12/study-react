{"ast":null,"code":"import { createStore } from \"redux\";\nconst form = document.querySelector(\"form\");\nconst input = document.querySelector(\"input\");\nconst ul = document.querySelector(\"ul\");\nconst ADD_TODO = \"ADD_TODO\";\nconst DELETE_TODO = \"DELETE_TODO\";\n\nconst reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  console.log(action);\n\n  switch (action.type) {\n    case ADD_TODO:\n      return [...state, {\n        text: action.text\n      }];\n\n    case DELETE_TODO:\n      return [...state];\n\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(reducer);\nstore.subscribe(() => console.log(store.getState()));\n\nconst paintToDos = () => {\n  const toDos = store.getState();\n  toDos.forEach(toDo => {\n    const li = document.createElement(\"li\");\n    li.id = toDo.id;\n    li.innerText = toDo.text;\n    ul.appendChild(li);\n  });\n};\n\nstore.subscribe(paintToDos);\n\nconst addToDo = text => {\n  store.dispatch({\n    type: ADD_TODO,\n    text\n  });\n};\n\nconst onSubmit = e => {\n  e.preventDefault();\n  const toDo = input.value;\n  input.value = \"\";\n  addToDo(toDo);\n};\n\nform.addEventListener(\"submit\", onSubmit);","map":{"version":3,"sources":["/Users/pyosangwoo/Documents/GitHub/study-redux/src/index.js"],"names":["createStore","form","document","querySelector","input","ul","ADD_TODO","DELETE_TODO","reducer","state","action","console","log","type","text","store","subscribe","getState","paintToDos","toDos","forEach","toDo","li","createElement","id","innerText","appendChild","addToDo","dispatch","onSubmit","e","preventDefault","value","addEventListener"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,MAAMC,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAb;AACA,MAAMC,KAAK,GAAGF,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAd;AACA,MAAME,EAAE,GAAGH,QAAQ,CAACC,aAAT,CAAuB,IAAvB,CAAX;AAEA,MAAMG,QAAQ,GAAG,UAAjB;AACA,MAAMC,WAAW,GAAG,aAApB;;AAEA,MAAMC,OAAO,GAAG,YAAwB;AAAA,MAAvBC,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;AACtCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AACA,UAAQA,MAAM,CAACG,IAAf;AACE,SAAKP,QAAL;AACE,aAAO,CAAC,GAAGG,KAAJ,EAAW;AAAEK,QAAAA,IAAI,EAAEJ,MAAM,CAACI;AAAf,OAAX,CAAP;;AACF,SAAKP,WAAL;AACE,aAAO,CAAC,GAAGE,KAAJ,CAAP;;AACF;AACE,aAAOA,KAAP;AANJ;AAQD,CAVD;;AAYA,MAAMM,KAAK,GAAGf,WAAW,CAACQ,OAAD,CAAzB;AAEAO,KAAK,CAACC,SAAN,CAAgB,MAAML,OAAO,CAACC,GAAR,CAAYG,KAAK,CAACE,QAAN,EAAZ,CAAtB;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACvB,QAAMC,KAAK,GAAGJ,KAAK,CAACE,QAAN,EAAd;AACAE,EAAAA,KAAK,CAACC,OAAN,CAAeC,IAAD,IAAU;AACtB,UAAMC,EAAE,GAAGpB,QAAQ,CAACqB,aAAT,CAAuB,IAAvB,CAAX;AACAD,IAAAA,EAAE,CAACE,EAAH,GAAQH,IAAI,CAACG,EAAb;AACAF,IAAAA,EAAE,CAACG,SAAH,GAAeJ,IAAI,CAACP,IAApB;AACAT,IAAAA,EAAE,CAACqB,WAAH,CAAeJ,EAAf;AACD,GALD;AAMD,CARD;;AAUAP,KAAK,CAACC,SAAN,CAAgBE,UAAhB;;AAEA,MAAMS,OAAO,GAAIb,IAAD,IAAU;AACxBC,EAAAA,KAAK,CAACa,QAAN,CAAe;AAAEf,IAAAA,IAAI,EAAEP,QAAR;AAAkBQ,IAAAA;AAAlB,GAAf;AACD,CAFD;;AAIA,MAAMe,QAAQ,GAAIC,CAAD,IAAO;AACtBA,EAAAA,CAAC,CAACC,cAAF;AACA,QAAMV,IAAI,GAAGjB,KAAK,CAAC4B,KAAnB;AACA5B,EAAAA,KAAK,CAAC4B,KAAN,GAAc,EAAd;AACAL,EAAAA,OAAO,CAACN,IAAD,CAAP;AACD,CALD;;AAOApB,IAAI,CAACgC,gBAAL,CAAsB,QAAtB,EAAgCJ,QAAhC","sourcesContent":["import { createStore } from \"redux\";\nconst form = document.querySelector(\"form\");\nconst input = document.querySelector(\"input\");\nconst ul = document.querySelector(\"ul\");\n\nconst ADD_TODO = \"ADD_TODO\";\nconst DELETE_TODO = \"DELETE_TODO\";\n\nconst reducer = (state = [], action) => {\n  console.log(action);\n  switch (action.type) {\n    case ADD_TODO:\n      return [...state, { text: action.text }];\n    case DELETE_TODO:\n      return [...state];\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(reducer);\n\nstore.subscribe(() => console.log(store.getState()));\n\nconst paintToDos = () => {\n  const toDos = store.getState();\n  toDos.forEach((toDo) => {\n    const li = document.createElement(\"li\");\n    li.id = toDo.id;\n    li.innerText = toDo.text;\n    ul.appendChild(li);\n  });\n};\n\nstore.subscribe(paintToDos);\n\nconst addToDo = (text) => {\n  store.dispatch({ type: ADD_TODO, text });\n};\n\nconst onSubmit = (e) => {\n  e.preventDefault();\n  const toDo = input.value;\n  input.value = \"\";\n  addToDo(toDo);\n};\n\nform.addEventListener(\"submit\", onSubmit);\n"]},"metadata":{},"sourceType":"module"}