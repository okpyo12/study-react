{"ast":null,"code":"import { createStore } from \"redux\";\nconst form = document.querySelector(\"form\");\nconst input = document.querySelector(\"input\");\nconst ul = document.querySelector(\"ul\");\nconst ADD_TODO = \"ADD_TODO\";\nconst DELETE_TODO = \"DELETE_TODO\";\n\nconst reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  console.log(action);\n\n  switch (action.type) {\n    case ADD_TODO:\n      return [{\n        text: action.text,\n        id: Date.now()\n      }, ...state];\n\n    case DELETE_TODO:\n      return [...state];\n\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(reducer);\n\nconst addToDo = text => {\n  store.dispatch({\n    type: ADD_TODO,\n    text\n  });\n};\n\nconst deleteToDo = () => {\n  console.log(\"delete\");\n};\n\nconst paintToDos = () => {\n  const toDos = store.getState();\n  ul.innerHTML = \"\";\n  toDos.forEach(toDo => {\n    const li = document.createElement(\"li\");\n    const btn = document.createElement(\"button\");\n    btn.innerText = \"DEL\";\n    btn.addEventListener(\"click\", deleteToDo);\n    ul.appendChild(btn);\n    li.id = toDo.id;\n    li.innerText = toDo.text;\n    ul.appendChild(li);\n  });\n};\n\nstore.subscribe(paintToDos);\n\nconst onSubmit = e => {\n  e.preventDefault();\n  const toDo = input.value;\n  input.value = \"\";\n  addToDo(toDo);\n};\n\nform.addEventListener(\"submit\", onSubmit);","map":{"version":3,"sources":["/Users/pyosangwoo/Documents/GitHub/study-redux/src/index.js"],"names":["createStore","form","document","querySelector","input","ul","ADD_TODO","DELETE_TODO","reducer","state","action","console","log","type","text","id","Date","now","store","addToDo","dispatch","deleteToDo","paintToDos","toDos","getState","innerHTML","forEach","toDo","li","createElement","btn","innerText","addEventListener","appendChild","subscribe","onSubmit","e","preventDefault","value"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,MAAMC,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAb;AACA,MAAMC,KAAK,GAAGF,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAd;AACA,MAAME,EAAE,GAAGH,QAAQ,CAACC,aAAT,CAAuB,IAAvB,CAAX;AAEA,MAAMG,QAAQ,GAAG,UAAjB;AACA,MAAMC,WAAW,GAAG,aAApB;;AAEA,MAAMC,OAAO,GAAG,YAAwB;AAAA,MAAvBC,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;AACtCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AACA,UAAQA,MAAM,CAACG,IAAf;AACE,SAAKP,QAAL;AACE,aAAO,CAAC;AAAEQ,QAAAA,IAAI,EAAEJ,MAAM,CAACI,IAAf;AAAqBC,QAAAA,EAAE,EAAEC,IAAI,CAACC,GAAL;AAAzB,OAAD,EAAwC,GAAGR,KAA3C,CAAP;;AACF,SAAKF,WAAL;AACE,aAAO,CAAC,GAAGE,KAAJ,CAAP;;AACF;AACE,aAAOA,KAAP;AANJ;AAQD,CAVD;;AAYA,MAAMS,KAAK,GAAGlB,WAAW,CAACQ,OAAD,CAAzB;;AAGA,MAAMW,OAAO,GAAIL,IAAD,IAAU;AACxBI,EAAAA,KAAK,CAACE,QAAN,CAAe;AAAEP,IAAAA,IAAI,EAAEP,QAAR;AAAkBQ,IAAAA;AAAlB,GAAf;AACD,CAFD;;AAIA,MAAMO,UAAU,GAAG,MAAM;AACvBV,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACD,CAFD;;AAGA,MAAMU,UAAU,GAAG,MAAM;AACvB,QAAMC,KAAK,GAAGL,KAAK,CAACM,QAAN,EAAd;AACAnB,EAAAA,EAAE,CAACoB,SAAH,GAAe,EAAf;AACAF,EAAAA,KAAK,CAACG,OAAN,CAAeC,IAAD,IAAU;AACtB,UAAMC,EAAE,GAAG1B,QAAQ,CAAC2B,aAAT,CAAuB,IAAvB,CAAX;AACA,UAAMC,GAAG,GAAG5B,QAAQ,CAAC2B,aAAT,CAAuB,QAAvB,CAAZ;AACAC,IAAAA,GAAG,CAACC,SAAJ,GAAgB,KAAhB;AACAD,IAAAA,GAAG,CAACE,gBAAJ,CAAqB,OAArB,EAA8BX,UAA9B;AACAhB,IAAAA,EAAE,CAAC4B,WAAH,CAAeH,GAAf;AACAF,IAAAA,EAAE,CAACb,EAAH,GAAQY,IAAI,CAACZ,EAAb;AACAa,IAAAA,EAAE,CAACG,SAAH,GAAeJ,IAAI,CAACb,IAApB;AACAT,IAAAA,EAAE,CAAC4B,WAAH,CAAeL,EAAf;AACD,GATD;AAUD,CAbD;;AAeAV,KAAK,CAACgB,SAAN,CAAgBZ,UAAhB;;AAGA,MAAMa,QAAQ,GAAIC,CAAD,IAAO;AACtBA,EAAAA,CAAC,CAACC,cAAF;AACA,QAAMV,IAAI,GAAGvB,KAAK,CAACkC,KAAnB;AACAlC,EAAAA,KAAK,CAACkC,KAAN,GAAc,EAAd;AACAnB,EAAAA,OAAO,CAACQ,IAAD,CAAP;AACD,CALD;;AAOA1B,IAAI,CAAC+B,gBAAL,CAAsB,QAAtB,EAAgCG,QAAhC","sourcesContent":["import { createStore } from \"redux\";\nconst form = document.querySelector(\"form\");\nconst input = document.querySelector(\"input\");\nconst ul = document.querySelector(\"ul\");\n\nconst ADD_TODO = \"ADD_TODO\";\nconst DELETE_TODO = \"DELETE_TODO\";\n\nconst reducer = (state = [], action) => {\n  console.log(action);\n  switch (action.type) {\n    case ADD_TODO:\n      return [{ text: action.text, id: Date.now() }, ...state];\n    case DELETE_TODO:\n      return [...state];\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(reducer);\n\n\nconst addToDo = (text) => {\n  store.dispatch({ type: ADD_TODO, text });\n};\n\nconst deleteToDo = () => {\n  console.log(\"delete\")\n}\nconst paintToDos = () => {\n  const toDos = store.getState();\n  ul.innerHTML = \"\";\n  toDos.forEach((toDo) => {\n    const li = document.createElement(\"li\");\n    const btn = document.createElement(\"button\");\n    btn.innerText = \"DEL\";\n    btn.addEventListener(\"click\", deleteToDo)\n    ul.appendChild(btn);\n    li.id = toDo.id;\n    li.innerText = toDo.text;\n    ul.appendChild(li);\n  });\n};\n\nstore.subscribe(paintToDos);\n\n\nconst onSubmit = (e) => {\n  e.preventDefault();\n  const toDo = input.value;\n  input.value = \"\";\n  addToDo(toDo);\n};\n\nform.addEventListener(\"submit\", onSubmit);\n"]},"metadata":{},"sourceType":"module"}