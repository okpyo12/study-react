{"ast":null,"code":"import { createStore } from \"redux\";\nconst add = document.getElementById(\"add\");\nconst minus = document.getElementById(\"minus\");\nconst number = document.querySelector(\"span\");\n\nconst countModifier = function () {\n  let count = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === \"ADD\") {\n    return count + 1;\n  } else if (action.type === \"MINUS\") {\n    return count - 1;\n  } else {\n    return 0;\n  }\n};\n\nconst countStore = createStore(countModifier);\nadd.addEventListener(\"click\", () => countStore.dispatch({\n  type: \"ADD\"\n}));\nadd.addEventListener(\"click\", () => countStore.dispatch({\n  type: \"MINUS\"\n}));","map":{"version":3,"sources":["/Users/pyosangwoo/Documents/GitHub/study-redux/src/index.js"],"names":["createStore","add","document","getElementById","minus","number","querySelector","countModifier","count","action","type","countStore","addEventListener","dispatch"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AAEA,MAAMC,GAAG,GAAGC,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAAZ;AACA,MAAMC,KAAK,GAAGF,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAAd;AACA,MAAME,MAAM,GAAGH,QAAQ,CAACI,aAAT,CAAuB,MAAvB,CAAf;;AAEA,MAAMC,aAAa,GAAG,YAAuB;AAAA,MAAtBC,KAAsB,uEAAd,CAAc;AAAA,MAAXC,MAAW;;AAC3C,MAAIA,MAAM,CAACC,IAAP,KAAgB,KAApB,EAA2B;AACzB,WAAOF,KAAK,GAAG,CAAf;AACD,GAFD,MAEO,IAAIC,MAAM,CAACC,IAAP,KAAgB,OAApB,EAA6B;AAClC,WAAOF,KAAK,GAAG,CAAf;AACD,GAFM,MAEA;AACL,WAAO,CAAP;AACD;AACF,CARD;;AAUA,MAAMG,UAAU,GAAGX,WAAW,CAACO,aAAD,CAA9B;AAEAN,GAAG,CAACW,gBAAJ,CAAqB,OAArB,EAA8B,MAAMD,UAAU,CAACE,QAAX,CAAoB;AAAEH,EAAAA,IAAI,EAAE;AAAR,CAApB,CAApC;AACAT,GAAG,CAACW,gBAAJ,CAAqB,OAArB,EAA8B,MAAMD,UAAU,CAACE,QAAX,CAAoB;AAAEH,EAAAA,IAAI,EAAE;AAAR,CAApB,CAApC","sourcesContent":["import { createStore } from \"redux\";\n\nconst add = document.getElementById(\"add\");\nconst minus = document.getElementById(\"minus\");\nconst number = document.querySelector(\"span\");\n\nconst countModifier = (count = 0, action) => {\n  if (action.type === \"ADD\") {\n    return count + 1;\n  } else if (action.type === \"MINUS\") {\n    return count - 1;\n  } else {\n    return 0;\n  }\n};\n\nconst countStore = createStore(countModifier);\n\nadd.addEventListener(\"click\", () => countStore.dispatch({ type: \"ADD\" }));\nadd.addEventListener(\"click\", () => countStore.dispatch({ type: \"MINUS\" }));\n"]},"metadata":{},"sourceType":"module"}