{"ast":null,"code":"import { createStore } from \"redux\";\nconst ADD = \"ADD\";\nconst DELETE = \"DELETE\";\nexport const addToDo = text => {\n  return {\n    type: ADD,\n    text\n  };\n};\nexport const deleteToDo = id => {\n  return {\n    type: DELETE,\n    id\n  };\n};\n\nconst reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD:\n      return [{\n        text: action.text,\n        id: Date.now()\n      }, ...state];\n\n    case DELETE:\n      return state.filter(toDo => toDo !== action.id);\n\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(reducer);\nexport default store;","map":{"version":3,"sources":["/Users/pyosangwoo/Documents/GitHub/study-redux/src/routes/store.js"],"names":["createStore","ADD","DELETE","addToDo","text","type","deleteToDo","id","reducer","state","action","Date","now","filter","toDo","store"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AAEA,MAAMC,GAAG,GAAG,KAAZ;AACA,MAAMC,MAAM,GAAG,QAAf;AAEA,OAAO,MAAMC,OAAO,GAAIC,IAAD,IAAU;AAC/B,SAAO;AACLC,IAAAA,IAAI,EAAEJ,GADD;AAELG,IAAAA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,MAAME,UAAU,GAAIC,EAAD,IAAQ;AAChC,SAAO;AACLF,IAAAA,IAAI,EAAEH,MADD;AAELK,IAAAA;AAFK,GAAP;AAID,CALM;;AAOP,MAAMC,OAAO,GAAG,YAAwB;AAAA,MAAvBC,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AACtC,UAAQA,MAAM,CAACL,IAAf;AACE,SAAKJ,GAAL;AACE,aAAO,CAAC;AAAEG,QAAAA,IAAI,EAAEM,MAAM,CAACN,IAAf;AAAqBG,QAAAA,EAAE,EAAEI,IAAI,CAACC,GAAL;AAAzB,OAAD,EAAwC,GAAGH,KAA3C,CAAP;;AACF,SAAKP,MAAL;AACE,aAAOO,KAAK,CAACI,MAAN,CAAcC,IAAD,IAAUA,IAAI,KAAKJ,MAAM,CAACH,EAAvC,CAAP;;AACF;AACE,aAAOE,KAAP;AANJ;AAQD,CATD;;AAWA,MAAMM,KAAK,GAAGf,WAAW,CAACQ,OAAD,CAAzB;AAEA,eAAeO,KAAf","sourcesContent":["import { createStore } from \"redux\";\n\nconst ADD = \"ADD\";\nconst DELETE = \"DELETE\";\n\nexport const addToDo = (text) => {\n  return {\n    type: ADD,\n    text,\n  };\n};\n\nexport const deleteToDo = (id) => {\n  return {\n    type: DELETE,\n    id,\n  };\n};\n\nconst reducer = (state = [], action) => {\n  switch (action.type) {\n    case ADD:\n      return [{ text: action.text, id: Date.now() }, ...state];\n    case DELETE:\n      return state.filter((toDo) => toDo !== action.id);\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(reducer);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}