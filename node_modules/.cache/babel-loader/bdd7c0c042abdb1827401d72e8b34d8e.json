{"ast":null,"code":"import { act } from \"react-dom/test-utils\";\nimport { createStore } from \"redux\";\nconst add = document.getElementById(\"add\");\nconst minus = document.getElementById(\"minus\");\nconst number = document.querySelector(\"span\");\nnumber.innerText = 0;\nconst ADD = \"ADD\";\nconst MINUS = \"MINUS\";\n\nconst countModifier = function () {\n  let count = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD:\n      return count + 1;\n\n    case MINUS:\n      return count - 1;\n\n    default:\n      return count;\n  }\n};\n\nconst countStore = createStore(countModifier);\n\nconst onChange = () => {\n  number.innerText = countStore.getState();\n};\n\ncountStore.subscribe(onChange);\n\nconst handleAdd = () => {\n  countStore.dispatch({\n    type: ADD\n  });\n};\n\nconst handleMinus = () => {\n  countStore.dispatch({\n    type: MINUS\n  });\n};\n\nadd.addEventListener(\"click\", handleAdd);\nminus.addEventListener(\"click\", handleMinus);","map":{"version":3,"sources":["/Users/pyosangwoo/Documents/GitHub/study-redux/src/index.js"],"names":["act","createStore","add","document","getElementById","minus","number","querySelector","innerText","ADD","MINUS","countModifier","count","action","type","countStore","onChange","getState","subscribe","handleAdd","dispatch","handleMinus","addEventListener"],"mappings":"AAAA,SAASA,GAAT,QAAoB,sBAApB;AACA,SAASC,WAAT,QAA4B,OAA5B;AAEA,MAAMC,GAAG,GAAGC,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAAZ;AACA,MAAMC,KAAK,GAAGF,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAAd;AACA,MAAME,MAAM,GAAGH,QAAQ,CAACI,aAAT,CAAuB,MAAvB,CAAf;AAEAD,MAAM,CAACE,SAAP,GAAmB,CAAnB;AAEA,MAAMC,GAAG,GAAG,KAAZ;AACA,MAAMC,KAAK,GAAG,OAAd;;AAEA,MAAMC,aAAa,GAAG,YAAuB;AAAA,MAAtBC,KAAsB,uEAAd,CAAc;AAAA,MAAXC,MAAW;;AAC3C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKL,GAAL;AACE,aAAOG,KAAK,GAAG,CAAf;;AACF,SAAKF,KAAL;AACE,aAAOE,KAAK,GAAG,CAAf;;AACF;AACE,aAAOA,KAAP;AANJ;AAQD,CATD;;AAWA,MAAMG,UAAU,GAAGd,WAAW,CAACU,aAAD,CAA9B;;AAEA,MAAMK,QAAQ,GAAG,MAAM;AACrBV,EAAAA,MAAM,CAACE,SAAP,GAAmBO,UAAU,CAACE,QAAX,EAAnB;AACD,CAFD;;AAIAF,UAAU,CAACG,SAAX,CAAqBF,QAArB;;AAEA,MAAMG,SAAS,GAAG,MAAM;AACtBJ,EAAAA,UAAU,CAACK,QAAX,CAAoB;AAAEN,IAAAA,IAAI,EAAEL;AAAR,GAApB;AACD,CAFD;;AAIA,MAAMY,WAAW,GAAG,MAAM;AACxBN,EAAAA,UAAU,CAACK,QAAX,CAAoB;AAAEN,IAAAA,IAAI,EAAEJ;AAAR,GAApB;AACD,CAFD;;AAIAR,GAAG,CAACoB,gBAAJ,CAAqB,OAArB,EAA8BH,SAA9B;AACAd,KAAK,CAACiB,gBAAN,CAAuB,OAAvB,EAAgCD,WAAhC","sourcesContent":["import { act } from \"react-dom/test-utils\";\nimport { createStore } from \"redux\";\n\nconst add = document.getElementById(\"add\");\nconst minus = document.getElementById(\"minus\");\nconst number = document.querySelector(\"span\");\n\nnumber.innerText = 0;\n\nconst ADD = \"ADD\";\nconst MINUS = \"MINUS\";\n\nconst countModifier = (count = 0, action) => {\n  switch (action.type) {\n    case ADD:\n      return count + 1;\n    case MINUS:\n      return count - 1;\n    default:\n      return count;\n  }\n};\n\nconst countStore = createStore(countModifier);\n\nconst onChange = () => {\n  number.innerText = countStore.getState();\n};\n\ncountStore.subscribe(onChange);\n\nconst handleAdd = () => {\n  countStore.dispatch({ type: ADD });\n};\n\nconst handleMinus = () => {\n  countStore.dispatch({ type: MINUS });\n};\n\nadd.addEventListener(\"click\", handleAdd);\nminus.addEventListener(\"click\", handleMinus);\n"]},"metadata":{},"sourceType":"module"}